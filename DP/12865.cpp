/*12865*/
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
vector<int> profit, weight, include;
int n, w, NowWeight, Maxprofit;
void knapsack(int i, int totweight, int totprofit);
vector<vector<int>> bag;
int main()
{
    cin >> n >> w;
    profit.resize(n + 1, 0), weight.resize(n + 1, 0), bag.resize(n + 1, vector<int>(w + 1, 0));
    for (int i = 1; i <= n; i++)
    {
        cin >> weight[i] >> profit[i];
    }
    //?? ?????? ???? ??? ???,DP????? ?? ?????? ??? ??? ??? ??? ???.
    for (int i = 1; i <= n; i++)
    {
        for (int j = i + 1; j <= n; j++)
        {
            if ((double)profit[i] / weight[i] < (double)profit[j] / weight[j])
            {
                swap(profit[i], profit[j]);
                swap(weight[i], weight[j]);
            }
        }
    }
    knapsack(0, 0, 0);
}
void knapsack(int i, int totweight, int totprofit)
{
    /*DP? ???? ???‹š? ????? ? ?? ??? ??.
    ?? ?? ??? ?? P[i-1][totweight]? ???
    ?? ??? ?? P[i][W]= P[i-1]+[totweight-wegiht[i]]???
    */
    for (int i = 1; i <= n; i++) // n? ??? ??
    {
        for (int j = 1; j <= w; j++) // j? ??? ???. ? P[2][30]? 2?? ???? ???? ??? ???? ??? 30??? ?.
        {
            totweight = weight[i], totprofit = profit[i];
            if (totweight > j) //???? ???? totweight? ????? --> ? ?????? ???? ??? ?? ???????.
            {
                bag[i][j] = bag[i - 1][j];
            }
            else if (totweight <= j) //???? ???? totweight? ??? -> ? ?? ? ????
            {
                //????? ?????? ???? ? ?? ???.
                //??? ?? ?? ???? ???? ?? ??? ?? ? ??? ?? ??? bag[i][j]? ????.
                bag[i][j] = max(bag[i - 1][j], bag[i - 1][j - totweight] + totprofit);
            }
        }
    }
    cout << bag[n][w]; // ?? ??? ???? ?? ???.
}